/*{
    "author": "David Howell",
    "targets": ["omnifocus"],
    "type": "action",
    "identifier": "io.howell.omnifocus.create-project-note",
    "version": "0.1",
    "description": "Creates and links a new Bear note for the project, populated by text in the note field.",
    "label": "Open Project Note"
}*/
(() => {
    var action = new PlugIn.Action(function(selection) {
        let project = selection.projects[0];
        
        if (project.note.indexOf("bear://") === 0) {
            // If the project already has a linked Bear note, just open it.
            let bearLink = project.note.split(/\s+/)[0];
            URL.fromString(bearLink).open();
        } else {
            
            /*  // Invoke the Drafts action to create the note from project details.
               // doesn't work because drafts can't reply with x-success
            URL.fromString("drafts://x-callback-url/runAction?text=&action=Create%20Project%20Note")
                .call(
                    (result) => {
                        console.log(JSON.stringify(result));
                    }, console.error);
            */

            let text = `# ${project.name}\n`;
            text += `* *Desired Outcome*: \n`;
            text += `* *Purpose*: \n`;
            text += `* *Time Frame*: \n`;
            text += `* *Tags*:  #1-projects\n`
            text += `* [OmniFocus: ${project.name}](omnifocus:///task/${project.id.primaryKey})\n\n`;
            text += `## Notes\n${project.note}`;

            let callbackParameters = { text: text };
            let baseURL = "bear://x-callback-url/create?";
            baseURL += Object.entries(callbackParameters)
                .map(([k,v]) => k + "=" + encodeURIComponent(v))
                .join("&");

            var noteLink;
            URL.fromString(baseURL).call((response) => {
                noteLink = `bear://x-callback-url/open-note?id=${response.identifier}`;
				console.log("Created project note at " + noteLink);
                project.note = noteLink;
                URL.fromString(noteLink).open();
            });
        }
    });

    action.validate = function(selection){
        return selection.projects.length === 1;
    };

    return action;
})();

/*
 * TODO Add tags drawn from the folder hierarchy and/or the OmniFocus "Bear:" tag hierarchy 
 */
